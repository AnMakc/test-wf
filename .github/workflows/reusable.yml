name: Reusable Workflow

env:
  REUSABLE_ENV: "reusable"

on:
  workflow_call:
    inputs:
      flag_1:
        type: boolean
        required: true
        description: 'Flag 1'
      flag_2:
        type: boolean
        required: true
        description: 'Flag 2'
      target_environment:
        type: string
        description: 'Target environment to deploy to'

    secrets:
      - env_secret_1
      - env_secret_2

  workflow_dispatch:
    inputs:
      flag_1:
        type: boolean
        required: true
        description: 'Flag 1'
      flag_2:
        type: boolean
        required: true
        description: 'Flag 2'
      target_environment:
        type: choice
        description: 'Target environment to deploy to'
        options:
          - test_env_1
          - test_env_2


jobs:
  job_1:
    runs-on: ubuntu-latest

    steps:
      - name: Step 1
        run: echo "Job 1 Step 1"

  job_debug:
    runs-on: ubuntu-latest

    continue-on-error: true

    needs: job_1

    steps:
      - name: Debug
        run: echo '${{ toJSON(inputs) }}'

  job_2_a:
    if: ${{ fromJSON(inputs.flag_1) }}
    needs: job_1

    runs-on: ubuntu-latest

    environment: ${{ inputs.target_environment }}

    steps:
      - name: Step 1
        run: echo "Flag 1 step 2a" && echo "Env var ${{ vars.env_var_1 }}"

      - name: Step 2
        run: echo "Flag 1 step 2a" && echo "Env secret ${{ secrets.env_secret_1 }}"

  job_2_b:
    if: ${{ fromJSON(inputs.flag_2) }}
    needs: job_1

    runs-on: ubuntu-latest

    environment: ${{ inputs.target_environment }}

    steps:
      - name: Step 1
        run: echo "Flag 1 step 2b" && echo "Env var ${{ vars.env_var_2 }}"

      - name: Step 2
        run: echo "Flag 1 step 2b" && echo "Env secret ${{ secrets.env_secret_2 }}"

